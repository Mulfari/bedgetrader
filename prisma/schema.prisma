generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String
  name        String?
  createdAt   DateTime     @default(now())
  subAccounts SubAccount[]
  orders      Order[]      // Relación con las órdenes
  bybitApiKey    String?   // Clave API de Bybit
  bybitApiSecret String?   // Secreto API de Bybit
}

model SubAccount {
  id        String   @id @default(uuid())
  userId    String
  name      String
  exchange  String
  apiKey    String
  secretKey String
  createdAt DateTime @default(now())
  isDemo    Boolean  @default(false)
  updatedAt DateTime @default(now()) @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Order {
  id           String   @id @default(uuid())
  userId       String
  orderId      String   // ID de orden de Bybit
  orderLinkId  String?  // ID de enlace de orden personalizado
  symbol       String   // Símbolo del par de trading
  side         String   // Buy o Sell
  orderType    String   // Market o Limit
  price        String?  // Precio de la orden
  qty          String   // Cantidad de la orden
  timeInForce  String   // GTC, IOC, FOK, etc.
  category     String   // linear, inverse, spot, option
  status       String   // Estado de la orden
  rawData      String   // Datos completos de la respuesta de Bybit
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([orderId])
}
